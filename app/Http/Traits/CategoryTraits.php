<?phpnamespace App\Http\Traits;use Illuminate\Http\Request;trait CategoryTraits {#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#|||||||||||||||||||||||||||||||||||||| #     CategorySort    public function CategorySort($id) {        $pageData = $this->pageData;        $pageData['ViewType'] = "List";        $thisRow = null;        if($id == 0) {            $rowData = self::getSelectQuery($this->model->where('parent_id', null)->orderBy('postion'));        } else {            $thisRow = $this->model->findOrFail($id);            $rowData = self::getSelectQuery($this->model->where('parent_id', $thisRow->id)->orderBy('postion'));        }        return view('admin.mainView.category.sort', compact('pageData', 'rowData', 'thisRow'));    }#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@>>>>>>>>>>>>>>>>>>>>>>>>>>>>>#|||||||||||||||||||||||||||||||||||||| #     CategorySaveSort    public function CategorySaveSort(Request $request) {        $positions = $request->positions;        foreach ($positions as $position) {            $id = $position[0];            $newPosition = $position[1];            $saveData = $this->model->findOrFail($id);            $saveData->postion = $newPosition;            $saveData->save();        }        self::ClearCash();        return response()->json(['success' => $positions]);    }}